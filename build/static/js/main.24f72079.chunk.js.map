{"version":3,"sources":["components/Subject/Subject.js","components/ActionTitle/ActionTitle.js","components/StandardTitle/StandardTitle.js","components/NodeComponent/Node.js","utils/deepCopyObj.js","utils/utils.js","components/MainComponent/MainComponent.js","App.js","index.js"],"names":["Subject","name","className","ActionTitle","StandardTitle","NodeComponent","node","onIndent","onOutdent","onDelete","onIndentClick","onOutdentClick","onDeleteClick","onClick","e","class","style","marginLeft","level","placeholder","color","value","children","map","key","id","deepCopyObject","objToCopy","newObject","Array","isArray","elem","deepCopyObjectAndFormArray","Object","values","Node","parentId","this","Math","random","toString","substr","getNodeByIdInTree","tree","nodeId","_getNodeByIdInTree","nodeIndex","dataInArrayFormat","i","length","MainComponent","useState","setTree","inputText","setInputText","headNode","setHeadNode","setLevel","dataStr","encodeURIComponent","JSON","stringify","addNewNode","newNode","clonedPrevTree","prevTree","push","clonedNode","parentNodeOfClickedNode","siblings","toBeParent","filter","sibInd","index","child","parentNodeId","parentNode","handleFile","content","target","result","console","log","parse","type","onChange","href","download","accept","file","fileData","FileReader","onloadend","readAsText","handleChangeFile","files","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24f72079.chunk.js","sourcesContent":["import React from 'react';\nimport './Subject.css';\n\nconst Subject = ({ name }) => {\n\treturn (\n\t\t<div>\n\t\t\t<h1 className=\"title\">{name}</h1>\n\t\t</div>\n\t);\n};\n\nexport default Subject;\n","import React from 'react';\nimport './ActionTitle.css';\n\nconst ActionTitle = () => {\n\treturn (\n\t\t<div>\n\t\t\t<h3>Actions</h3>\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t<span>Ident, </span>\n\t\t\t\t\t<span>Outdent, </span>\n\t\t\t\t\t<span>Delete </span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ActionTitle;\n","import React from 'react';\nimport './StandardTitle.css';\n\nconst StandardTitle = () => {\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<h3>Standard</h3>\n\t\t\t<p>The text of standard</p>\n\t\t</div>\n\t);\n};\n\nexport default StandardTitle;\n","import React from 'react';\nimport './Node.css';\n\nexport const NodeComponent = ({ node, onIndent, onOutdent, onDelete }) => {\n\tconst onIndentClick = (node) => {\n\t\tonIndent(node);\n\t};\n\tconst onOutdentClick = (node) => {\n\t\tonOutdent(node);\n\t};\n\tconst onDeleteClick = (node) => {\n\t\tonDelete(node);\n\t};\n\treturn (\n\t\t<>\n\t\t\t<div className=\"main\">\n\t\t\t\t<div className=\"arrow\" onClick={(e) => onOutdentClick(node)}>\n\t\t\t\t\t<i className=\"fas fa-arrow-left\"></i>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"arrow\" onClick={(e) => onIndentClick(node)}>\n\t\t\t\t\t<i className=\"fas fa-arrow-right\"></i>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"delete\" onClick={(e) => onDeleteClick(node)}>\n\t\t\t\t\t<i class=\"far fa-trash-alt\"></i>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"indent\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmarginLeft: node.level > 0 ? `${node.level * 20}px` : 0\n\t\t\t\t\t}}>\n\t\t\t\t\t-\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"text\"\n\t\t\t\t\tplaceholder=\"Add a standard\"\n\t\t\t\t\t// contentEditable=\"true\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcolor:\n\t\t\t\t\t\t\tnode.level === 1 ? '#18dc60' : node.level === 2 ? 'grey' : '#ccc'\n\t\t\t\t\t}}>\n\t\t\t\t\t{node.value}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{node.children.map((node) => {\n\t\t\t\treturn (\n\t\t\t\t\t<NodeComponent\n\t\t\t\t\t\tnode={node}\n\t\t\t\t\t\tkey={node.id}\n\t\t\t\t\t\tonIndent={(node) => onIndentClick(node)}\n\t\t\t\t\t\tonOutdent={(node) => onOutdentClick(node)}\n\t\t\t\t\t\tonDelete={(node) => onDeleteClick(node)}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</>\n\t);\n};\n","export const deepCopyObject = (objToCopy) => {\n\tif (typeof objToCopy !== 'object' || objToCopy === null) {\n\t\treturn objToCopy;\n\t}\n\tconst newObject = {};\n\tfor (const key in objToCopy) {\n\t\tif (Array.isArray(objToCopy[key])) {\n\t\t\tnewObject[key] = objToCopy[key].map((elem) => {\n\t\t\t\treturn deepCopyObject(elem);\n\t\t\t});\n\t\t} else {\n\t\t\tnewObject[key] = deepCopyObject(objToCopy[key]);\n\t\t}\n\t}\n\treturn newObject;\n};\nexport const deepCopyObjectAndFormArray = (objToCopy) => {\n\treturn Object.values(deepCopyObject(objToCopy));\n};\n","const ID = function () {\n\treturn '_' + Math.random().toString(36).substr(2, 9);\n};\nexport class Node {\n\tconstructor(value, level, parentId) {\n\t\tthis.id = ID();\n\t\tthis.value = value;\n\t\tthis.children = [];\n\t\tthis.parentId = parentId;\n\t\tthis.level = level;\n\t}\n}\n","import React, { useState } from 'react';\nimport './MainComponent.css';\nimport { NodeComponent } from '../NodeComponent/Node';\nimport {\n\tdeepCopyObject,\n\tdeepCopyObjectAndFormArray\n} from '../../utils/deepCopyObj';\nimport { Node } from '../../utils/utils';\n\nconst getNodeByIdInTree = (tree, nodeId) => {\n\tif (!nodeId) return tree;\n\tfor (const node of tree) {\n\t\tif (node.id === nodeId) return node;\n\t\t_getNodeByIdInTree(node, nodeId);\n\t}\n};\nconst _getNodeByIdInTree = (node, nodeId) => {\n\tif (node.id === nodeId) {\n\t\treturn node;\n\t}\n\tfor (const child of node.children) {\n\t\t_getNodeByIdInTree(child, nodeId);\n\t}\n};\nconst deleteNode = (tree, node) => {\n\tconst parent = getNodeByIdInTree(tree, node.parentId);\n\tparent.children = parent.children.filter((child) => child.id !== node.id);\n};\nconst nodeIndex = (nodeId, dataInArrayFormat) => {\n\tfor (let i = 0; i < dataInArrayFormat.length; i++) {\n\t\tif (dataInArrayFormat[i].id === nodeId) return i;\n\t}\n};\n\nexport default function MainComponent() {\n\tconst [tree, setTree] = useState([]);\n\tconst [inputText, setInputText] = useState('');\n\tconst [headNode, setHeadNode] = useState(null);\n\tconst [level, setLevel] = useState(1);\n\n\tconst onChangeHandler = (e) => {\n\t\tsetInputText(e.target.value);\n\t};\n\n\tconst handleClick = (e) => {\n\t\tif (level === 1) {\n\t\t\taddNewNode(null, new Node(inputText, level, null));\n\t\t} else {\n\t\t\taddNewNode(headNode.id, new Node(inputText, level, headNode.id));\n\t\t}\n\t};\n\tconst dataStr =\n\t\t'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(tree));\n\tconst addNewNode = (parentId, newNode) => {\n\t\tconst clonedPrevTree = deepCopyObjectAndFormArray(tree);\n\t\tif (parentId) {\n\t\t\tsetTree((prevTree) => {\n\t\t\t\tconst parentNode = getNodeByIdInTree(clonedPrevTree, parentId);\n\t\t\t\tparentNode.children.push(newNode);\n\t\t\t\treturn clonedPrevTree;\n\t\t\t});\n\t\t} else {\n\t\t\tsetTree((prevTree) => {\n\t\t\t\tclonedPrevTree.push(newNode);\n\t\t\t\treturn clonedPrevTree;\n\t\t\t});\n\t\t}\n\t};\n\n\tconst onIndent = (node) => {\n\t\tsetTree((prevTree) => {\n\t\t\tconst clonedPrevTree = deepCopyObjectAndFormArray(prevTree);\n\t\t\tconst clonedNode = deepCopyObject(node);\n\t\t\tif (!node.parentId) {\n\t\t\t\tconst index = nodeIndex(node.id, clonedPrevTree);\n\t\t\t\tif (!index) return prevTree;\n\t\t\t\tconst toBeParent = clonedPrevTree[index - 1];\n\t\t\t\tsetHeadNode(toBeParent);\n\t\t\t\tclonedNode.parentId = toBeParent.id;\n\t\t\t\tclonedNode.level = toBeParent.level + 1;\n\t\t\t\tsetLevel(toBeParent.level + 1);\n\t\t\t\ttoBeParent.children.push(clonedNode);\n\t\t\t\treturn clonedPrevTree.filter((child) => child.id !== node.id);\n\t\t\t} else {\n\t\t\t\tconst parentNodeOfClickedNode = getNodeByIdInTree(\n\t\t\t\t\tclonedPrevTree,\n\t\t\t\t\tnode.parentId\n\t\t\t\t);\n\t\t\t\tlet siblings = parentNodeOfClickedNode.children;\n\t\t\t\tconst index = nodeIndex(node.id, siblings);\n\t\t\t\tconst toBeParent = siblings[index - 1];\n\t\t\t\tclonedNode.level = clonedNode.level + 1;\n\t\t\t\tsetLevel(toBeParent.level + 1);\n\t\t\t\tparentNodeOfClickedNode.children = parentNodeOfClickedNode.children.filter(\n\t\t\t\t\t(sibInd) => sibInd.id !== node.id\n\t\t\t\t);\n\t\t\t\ttoBeParent.children.push(clonedNode);\n\t\t\t\treturn clonedPrevTree;\n\t\t\t}\n\t\t});\n\t};\n\n\tconst onOutdent = (node) => {\n\t\tsetTree((prevTree) => {\n\t\t\tif (!node.parentId) return prevTree;\n\t\t\tconst clonedPrevTree = deepCopyObjectAndFormArray(prevTree);\n\t\t\tconst clonedNode = deepCopyObject(node);\n\t\t\tconst parentNodeOfClickedNode = getNodeByIdInTree(\n\t\t\t\tclonedPrevTree,\n\t\t\t\tnode.parentId\n\t\t\t);\n\t\t\tparentNodeOfClickedNode.children = parentNodeOfClickedNode.children.filter(\n\t\t\t\t(child) => child.id !== node.id\n\t\t\t);\n\t\t\tclonedNode.level = node.level - 1;\n\t\t\tclonedNode.parentId = null;\n\t\t\tsetLevel(node.level - 1);\n\t\t\tsetHeadNode(null);\n\t\t\tif (!parentNodeOfClickedNode.parentId) {\n\t\t\t\tclonedPrevTree.push(clonedNode);\n\t\t\t} else {\n\t\t\t\tconst toBeParentNode = getNodeByIdInTree(\n\t\t\t\t\tclonedPrevTree,\n\t\t\t\t\tparentNodeOfClickedNode.parentId\n\t\t\t\t);\n\t\t\t\ttoBeParentNode.children.push(clonedNode);\n\t\t\t}\n\t\t\treturn clonedPrevTree;\n\t\t});\n\t};\n\n\tconst onDelete = (node) => {\n\t\tsetTree((prevTree) => {\n\t\t\tconst clonedPrevTree = deepCopyObjectAndFormArray(prevTree);\n\t\t\tconst clonedNode = deepCopyObject(node);\n\t\t\tconst fondNode = getNodeByIdInTree(clonedPrevTree, node.id);\n\t\t\tconst parentNodeId = node.parentId;\n\t\t\tif (parentNodeId) {\n\t\t\t\tconst parentNode = getNodeByIdInTree(clonedPrevTree, parentNodeId);\n\t\t\t\tparentNode.children = parentNode.children.filter(\n\t\t\t\t\t(child) => child.id !== node.id\n\t\t\t\t);\n\t\t\t\treturn clonedPrevTree;\n\t\t\t} else {\n\t\t\t\treturn clonedPrevTree.filter((child) => child.id !== node.id);\n\t\t\t}\n\t\t});\n\t};\n\n\tconst handleFile = (e) => {\n\t\tconst content = e.target.result;\n\t\tconsole.log('file content', content);\n\t\tsetTree(JSON.parse(content));\n\t};\n\n\tconst handleChangeFile = (file) => {\n\t\tlet fileData = new FileReader();\n\t\tfileData.onloadend = handleFile;\n\t\tfileData.readAsText(file);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"tree-container\">\n\t\t\t\t{tree.map((node) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<NodeComponent\n\t\t\t\t\t\t\tkey={node.id}\n\t\t\t\t\t\t\tnode={node}\n\t\t\t\t\t\t\tonIndent={onIndent}\n\t\t\t\t\t\t\tonOutdent={onOutdent}\n\t\t\t\t\t\t\tonDelete={onDelete}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tclassName=\"input-text\"\n\t\t\t\tonChange={onChangeHandler}\n\t\t\t\tplaceholder=\"add a standard\"></input>\n\t\t\t<button className=\"button\" onClick={handleClick}>\n\t\t\t\t<i className=\"fas fa-plus-circle\"></i>Add a standard\n\t\t\t</button>\n\t\t\t<a href={dataStr} download=\"treeStrc.json\">\n\t\t\t\tDownload as json\n\t\t\t</a>\n\t\t\t<div>\n\t\t\t\t<p>Upload file to generate structure</p>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"file\"\n\t\t\t\t\taccept=\".json\"\n\t\t\t\t\tonChange={(e) => handleChangeFile(e.target.files[0])}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport Subject from './components/Subject/Subject';\nimport ActionTitle from './components/ActionTitle/ActionTitle';\nimport StandardTitle from './components/StandardTitle/StandardTitle';\nimport MainComponent from './components/MainComponent/MainComponent';\nimport './App.css';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"content\">\n\t\t\t\t<Subject name=\"MATHEMATICS\" />\n\t\t\t\t<div className=\"heading\">\n\t\t\t\t\t<ActionTitle />\n\t\t\t\t\t<StandardTitle />\n\t\t\t\t</div>\n\t\t\t\t<MainComponent />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}